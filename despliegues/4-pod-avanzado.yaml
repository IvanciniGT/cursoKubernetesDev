kind:           Pod   
apiVersion:     v1

metadata:       
    name:       pod-ivan-avanzado-2

spec:
    #initContainers:
        # Lista de contenedores que ejecuten tareas (scripts, comandos)
        # Tareas que deben ejecutarse ANTES de los contenedores, y que se irán ejecutando SECUENCIALMENTE
    containers:
        -   name: bbdd
            image: mysql:8.0
            
            #envFrom: 
            env:
                - name:     MYSQL_ROOT_PASSWORD
                  value:    password
                  
                - name:     MYSQL_DATABASE
                  value:    basedatos
                  
                - name:     MYSQL_USER
                  value:    usuario
                  
                - name:     MYSQL_PASSWORD
                  value:    password
            
        # Si tengo varios contenedores, éstos se ejecutan EN PARALELO, SIMULTANEAMENTE
        -   name:  contenedor1
            image: nginx:1.23
            
            # Los contenedores podían tener limitación de acceso a recursos HW
            # Esto es básico en entornos de producción, por qué?
            resources: 
                requests: 
                                # No pido CPUs, sino TIEMPO DE USO DE CPU
                    cpu:        500m   # Pido que se me reserve el equivalente a usar 2 cores al 100%
                                        # Que podría bien ser 4 cores al 50%
                                        # U 8 cores al 25%
                    memory:     1Gi
                limits:
                    cpu:        8000m
                    memory:     1Gi

            volumeMounts:
                - name: datos
                  mountPath: /datos
                - name: configuracion
                  mountPath: /etc/nginx/conf.d
            
            # Variables de entorno!
            
    # volumenes
    volumes:
        - name: configuracion
          configMap:
            name: fichero-configuracion-nginx
        - name: datos
          # Donde se van a guardar realmente esos "datos"
          # Que tipo de volumen voy a usar
          #emptyDir: {}              # En disco
          #emptyDir:                 # En RAM
          #  medium: 'Memory'

          #nfs:
          #  server: nfs-server.default.svc.cluster.local    # Servidor en red nfs
          #  path: "/"                                       # El volumen exportado por el servidor
          #awsElasticBlockStore:
          #  volumeID: "vol-08836614756acc29b"
          #  fsType: ext4
          # Podría configurar estas cosas.... pero no lo voy a hacer NUNCA JAMAS EN LA VIDA...
          # DESPEDIDO SI LO HACES
          
          # Lo que voy a ha pedir un volumen con unas características
          persistentVolumeClaim:
            claimName: peticion-de-volumen-ivan